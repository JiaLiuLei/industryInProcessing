<template v-if="status === 3">
	<div class="container">
		<div class="status busy"></div>
		<text class="text">正在进行接处警</text>
		<image class="arrow" src="../../static/icon-arrow.png"></image>
	</div>
</template>
<template v-else>
	<picker mode="selector" :value="value" :range="array" @change="handlePickerChange">
		<div class="container">
			<div class="status"></div>
			<text class="text">{{(storageSta == 0 ? array[value] : defaultSta)}}</text>
			<image class="arrow" src="../../static/icon-arrow.png"></image>
		</div>
	</picker>
</template>

<script>
	export default {
		props: {
			status: {
				type: Number, // 2为有任务正在处理, 0下班, 1上班
				default: 1
			}
		},
		data() {
			return {
				defaultSta: "请选择当前状态",
				storageSta: 1,
				array: ["上班", "下班"],
				value: -1
			}
		},
		computed: {
			text() {
				let text = "上班";
				switch (this.status) {
					case 2:
						text = "正在进行接处警";
						break;
					case 0:
						text = "下班";
						break;
				}
				return text;
			}
		},
		mounted(){
			// 从本地存储获取工作状态
			uni.getStorage({
			    key: 'storage_status',
			    success: (res) => {
					this.storageSta = res.data;
					if(res.data == 0){
						this.value = res.data;
					}
			    }
			});
		},
		methods: {
			handlePickerChange(value) {
				const {
					detail
				} = value;
				if (detail.value !== this.value) {
					// const workStatus = detail.value === 0 ? 2 : 1;
					this.value = detail.value;
					this.storageSta = this.value;
					// 将工作状态存在本地
					uni.setStorage({
						key: 'storage_status',
						data: this.value,
						success: (res) => {
							console.log('success: storage_status=' + this.value);
						}
					});
					if(this.value == 1){
						//退出app
						// #ifdef APP-PLUS  
						plus.runtime.quit();  
						// #endif
					}
				}
			}
		}
	}
</script>

<style scoped>
	.container {
		flex-direction: row;
		align-items: center;
	}

	.status {
		width: 16rpx;
		height: 16rpx;
		margin-right: 20rpx;
		border-radius: 16rpx;
		background-color: #55FF00;
	}

	.busy {
		background-color: #FF6854;
	}

	.text {
		font-size: 28rpx;
		color: #fff;
	}

	.arrow {
		width: 44rpx;
		height: 44rpx;
	}
</style>
