<template>
	<div class="container" :style="{height: phoneHeight}">
		<div class="broadcast" v-if="broadcastList.length">
			<div class="broadcast-item" v-for="item in broadcastList" :key="item.alarmSituationId">
				<text class="broadcast-content">{{ item.content }}</text>
			</div>
		</div>
		<div class="map-box">
			<TheMap v-if="showMap" controls :destination="destination" :isPolyline="true"></TheMap>
		</div>
		<div id="content" class="content">
			<TheNav :total="taskListTotal"></TheNav>
			<div class="detail">
				<UserInfo :username="userinfo.nick"></UserInfo>
				<BusyStatus :sourceData="pageData" v-if="alarm.status === 3"></BusyStatus>
				<LeisureStatus :sourceData="pageData" v-else></LeisureStatus>
			</div>
		</div>
		<!-- <navigator url="/pages/traffic-info/index" hover-class="navigator-hover" class="information-up"><text class="information-text">信息上报</text></navigator> -->
	</div>
</template>

<script>
	import UserInfo from "./UserInfo.nvue";
	import LeisureStatus from "./LeisureStatus";
	import BusyStatus from "./BusyStatus";
	import TheNav from "./TheNav";
	import TheMap from "@/components/TheMap";
	import {
		getHomeInfo
	} from "@/api/public";
	import {
		getTask
	} from "@/api/task";
	import {
		loginHistory
	} from "@/api/user";
	import igexinTool from "@/util/igexinTool";
	import {
		mapState
	} from "vuex";

	export default {
		components: {
			TheMap,
			UserInfo,
			LeisureStatus,
			BusyStatus,
			TheNav
		},
		data() {
			return {
				nowMapIndex: true,
				pageData: {},
				taskListTotal: 0,
				userinfo: {},
				broadcastList: [],
				broadcastTimer: null
			}
		},
		computed: {
			...mapState(["broadcast"]),
			showMap() {
				let status = false;
				if (Object.keys(this.pageData).length) {
					status = true;
				}
				return status;
			},
			alarm() {
				let obj = Object.create(null);
				const {
					alarm
				} = this.pageData;
				if (alarm != null && typeof alarm === "object") {
					obj = alarm;
				}
				return obj;
			},
			destination() {
				let result = Object.create(null);
				if (Object.keys(this.alarm).length) {
					const {
						lng,
						lat
					} = this.alarm;
					result = {
						longitude: lng,
						latitude: lat
					}
				}
				return result;
			}
		},
		watch: {
			broadcast(message) {
				this.broadcastList.push(message);
				this.getTaskList();
				clearInterval(this.broadcastTimer);
				this.broadcastTimer = setTimeout(() => {
					if (this.broadcastList.length) {
						this.broadcastList = this.broadcastList.filter(({
							alarmSituationId
						}) => message.alarmSituationId !== alarmSituationId);
						uni.navigateTo({
							url: `/pages/task-detail/index?id=${message.alarmSituationId}`
						})
					} else {
						clearInterval(this.broadcastTimer);
					}
				}, 5000);
			}
		},
		async onReady() {
			//用户信息
			const userinfo = uni.getStorageSync('userinfo');
			const token = uni.getStorageSync('token');
			this.userinfo = userinfo;
			// console.log(userinfo)
			if(!!token){
				await loginHistory();
			}
			// this.$store.commit('setUserInfo', userinfo)
			// console.log(this.$store.state.userinfo)

			//个推绑定别名
			var tool = new igexinTool();
			tool.bindAlias(userinfo.unique);
			tool.turnOnPush();

		},
		async onShow() {
			this.getPageData();
			this.getTaskList();
		},
		methods: {
			// 获取首页数据
			getPageData() {
				getHomeInfo().then(result => {
					this.pageData = result;
				})
			},
			// 获取任务列表
			getTaskList() {
				getTask({
					status: 2
				}).then(result => {
					this.taskListTotal = result.total;
				})
			},
			// 右滑完成任务回调
			// handlePerform() {
			// 	this.getPageData();
			// 	this.getTaskList();
			// }
		}
	}
</script>

<style scoped>
	.container {
		flex: 1;
		flex-direction: column;
	}
	.map-box{
		flex: 1;
	}
	.map {
		width: 750rpx;
		flex: 1;
	}
	.content {
		margin-top: -50rpx;
	}

	.detail {
		padding: 50rpx;
		background-color: #2C2F3A;
		border-top-left-radius: 50rpx;
		border-top-right-radius: 50rpx;
	}

	.broadcast {
		position: fixed;
		top: 0;
		left: 50rpx;
		width: 650rpx;
		z-index: 99;
	}

	.broadcast-item {
		margin-top: 30rpx;
	}

	.broadcast-content {
		width: 650rpx;
		height: 64rpx;
		line-height: 64rpx;
		text-align: center;
		border-radius: 8rpx;
		color: #fff;
		background-color: #0055FE;
	}
	.information-up{
		position: absolute;
		top: 70rpx;
		right: 20rpx;
		background-color: #0055FE;
		padding: 10rpx 16rpx;
		border-radius: 8rpx;
	}
	.information-text{
		font-size: 24rpx;
		color: #fff;
	}
</style>
