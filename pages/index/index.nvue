<template>
	<div class="container" :style="{height: phoneHeight}">
		<TheMap :height="mapHeight" :width="phoneWidth" controls :destination="destination"></TheMap>
		<div id="content" class="content">
			<TheNav :sourceData="taskList"></TheNav>
			<div class="detail">
				<UserInfo></UserInfo>
				<BusyStatus :sourceData="pageData" @perform="handlePerform" v-if="alarm.status === 3"></BusyStatus>
				<LeisureStatus :sourceData="pageData" v-else></LeisureStatus>
			</div>
		</div>
	</div>
</template>

<script>
	import UserInfo from "./UserInfo.nvue";
	import LeisureStatus from "./LeisureStatus";
	import BusyStatus from "./BusyStatus";
	import TheNav from "./TheNav";
	import TheMap from "@/components/TheMap";
	import { getHomeInfo } from "@/api/public";
	import { getTask } from "@/api/task";

	export default {
		components: {
			TheMap,
			UserInfo,
			LeisureStatus,
			BusyStatus,
			TheNav
		},
		data() {
			return {
				nowMapIndex: true,
				phoneHeight: 0, //屏幕高
				phoneWidth: 0, // 屏幕宽
				contentHeight: 0,
				pageData: {},
				taskList: []
			}
		},
		computed:{
			alarm() {
				let obj = Object.create(null);
				const { alarm } = this.pageData;
				if (alarm != null && typeof alarm === "object") {
					obj = alarm;
				}
				return obj;
			},
			// map高度
			mapHeight() {
				return this.phoneHeight - this.contentHeight;
			},
			destination(){
				let result = Object.create(null);
				if (Object.keys(this.alarm).length) {
					const { longitude, latitude } = this.alarm;
					result = { longitude, latitude }
				}
				return result;
			}
		},
		onReady() {
			// 计算屏幕高度 ，宽度
			uni.getSystemInfo({
				success: (res) => {
					this.phoneHeight = res.windowHeight;
					this.phoneWidth = res.windowWidth;
				}
			});
		},
		async onShow() {
			await this.getPageData();
			this.getTaskList();
		},
		methods: {
			async getPageData(){
				uni.showLoading({
				    title: '加载中'
				});
				try{
					const result = await getHomeInfo();
					this.pageData = result;
				}catch(error){
					uni.showToast({
					    title: error.message,
						icon: "none", 
					    duration: 2000
					});
				}
				uni.hideLoading();
				
				this.$nextTick(() => {
					this.setContentHeight();
				});
			},
			async getTaskList(){
				uni.showLoading({
				    title: '加载中'
				});
				try{
					const result = await getTask({status: 3});
					this.taskList = result;
				}catch{
					
					// uni.showToast({
					//     title: error.message,
					// 	icon: "none", 
					//     duration: 2000
					// });
				}
				uni.hideLoading();
			},
			handlePerform(){
				this.getPageData();
				this.getTaskList();
			},
			// 计算内容高度
			setContentHeight() {
				const query = uni.createSelectorQuery().in(this);
				query.select('#content').boundingClientRect(data => {
					const {
						height
					} = data;
					this.contentHeight = height;
				}).exec();
			}
		}
	}
</script>

<style scoped>
	.container {
		flex-direction: column;
		background-color: #2C2F3A;
	}
	.map {
		width: 750rpx;
	}
	.content {
		margin-top: -50rpx;
	}
	.detail{
		padding: 50rpx 50rpx 1rpx 50rpx;
		background-color: #2C2F3A;
		border-top-left-radius: 50rpx;
		border-top-right-radius: 50rpx;
	}
</style>
