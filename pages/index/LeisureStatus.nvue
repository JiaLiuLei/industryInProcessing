<template>
	<div class="container">
		<div class="info">
			<!-- <div>
				<div class="mileage-detail">
					<text class="big-number">{{alarm.todayPatrolDistance || 0}}</text><text class="unit">Km</text>
				</div>
				<text class="text">今日累计巡逻里程</text>
			</div> -->
			<div>
				<div class="task-detail">
					<text class="small-number">{{alarm.totalHandleAlarm || 0}}</text><text class="text">起</text>
				</div>
				<text class="text">警情处置数</text>
			</div>
			<WorkStatus :status="alarm.status"></WorkStatus>
		</div>
		<!-- <div class="tool">
			<div class="btn">
				<image class="icon-relevance" src="/static/icon-relevance.png"></image>

				<navigator v-if="bindCard.length" class="title" url="/pages/relevance/index" hover-class="none">
					<text class="btn-text">解绑巡逻车辆</text>
				</navigator>
				
				<navigator v-else class="title" @click="handleBindCar" hover-class="none">
					<text class="btn-text">绑定巡逻车辆</text>
				</navigator>
			</div>
			<WorkStatus :status="alarm.status"></WorkStatus>
		</div> -->
	</div>
</template>

<script>
	import WorkStatus from "./WorkStatus";
	export default {
		props:{
			sourceData: Object
		},
		components: {
			WorkStatus
		},
		computed:{
			alarm() {
				let obj = Object.create(null);
				const { alarm } = this.sourceData;
				if (alarm != null && typeof alarm === "object") {
					obj = alarm;
				}
				// console.log(this.sourceData)
				return obj;
			},
			bindCard() {
				let arr = [];
				const { bindCard } = this.sourceData;
				if (Array.isArray(bindCard)) {
					arr = bindCard;
				}
				return arr;
			}
		},
		methods:{
			handleBindCar(){
				uni.scanCode({
				    success: function (res) {
				        console.log('条码类型：' + res.scanType);
				        console.log('条码内容：' + res.result);
						uni.navigateTo({
							url: "/pages/relevance/index"
						})
				    }
				});
			}
		}
	}
</script>

<style scoped>
.container{
	margin-top: 50rpx;
}
.info{
	flex-direction: row;
	align-items: flex-end;
	justify-content: space-between;
}
.mileage-detail{
	flex-direction: row;
	align-items: flex-end;
}
.big-number{
	font-size: 100rpx;
	line-height: 100rpx;
	color: #fff;
}
.unit{
	font-size: 28rpx;
	color: #6C6F7B;
}
.text{
	font-size: 24rpx;
	color: #6C6F7B;
}
.task-detail{
	flex-direction: row;
	align-items: center;
}
.small-number{
	font-size: 60rpx;
	line-height: 60rpx;
	color: #fff;
}

.tool{
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
	margin-top: 50rpx;
}
.btn{
	flex-direction: row;
	align-items: center;
	justify-content: center;
	width: 300rpx;
	height: 88rpx;
	background-color: #424758;
	border-radius: 8rpx;
}
.icon-relevance{
	width: 32rpx;
	height: 32rpx;
}
.btn-text{
	margin-left: 10rpx;
	font-size: 28rpx;
	color: #BDC1CC;
}
</style>
